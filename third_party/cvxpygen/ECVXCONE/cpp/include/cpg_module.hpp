
/*
Auto-generated by CVXPYgen on August 02, 2025 at 20:40:36.
Content: Declarations for Python binding with pybind11.
*/

// User-defined parameters
struct CPG_Params_cpp_t {
    std::array<double, 100> A;
    std::array<double, 60> B;
    std::array<double, 10> tracking_err_square;
};

// Flags for updated user-defined parameters
struct CPG_Updated_cpp_t {
    bool A;
    bool B;
    bool tracking_err_square;
};

// Primal solution
struct CPG_Prim_cpp_t {
    std::array<double, 100> Q;
    std::array<double, 60> R;
    std::array<double, 36> T;
};

// Dual solution
struct CPG_Dual_cpp_t {
    std::array<double, 400> d0;
    std::array<double, 256> d1;
    std::array<double, 100> d2;
    std::array<double, 9> d3;
    std::array<double, 36> d4;
    std::array<double, 36> d5;
};

// Solver information
struct CPG_Info_cpp_t {
    double obj_val;
    int iter;
    int status;
    double pri_res;
    double dua_res;
    double time;
};

// Solution and solver information
struct CPG_Result_cpp_t {
    CPG_Prim_cpp_t prim;
    CPG_Dual_cpp_t dual;
    CPG_Info_cpp_t info;
};

// Main solve function
CPG_Result_cpp_t solve_cpp(struct CPG_Updated_cpp_t& CPG_Updated_cpp, struct CPG_Params_cpp_t& CPG_Params_cpp);
